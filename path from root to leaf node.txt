/* Online Java Compiler and Editor */
import java.util.*;
 class TreeNode
{
    int val;
    TreeNode left;
    TreeNode right;
    public TreeNode(int val){
        this.val= val;
        this.left=null;
        this.right=null;
    }
}
public class HelloWorld{
    //we are going to print the path that ends with the leaf node
    
    public void nodeToLeaf(TreeNode node,
    List<Integer> path)
    {
        
// Base case: if root is null then return nothing
        if(node==null){
        return;
        }
        // add the node from start 
        path.add(node.val);
        //if leaf node then print the path
       if(node.left==null&&node.right==null)
       {
           printPath(path);
       }
   //traverse through left and right
        nodeToLeaf(node.left, new ArrayList<>(path));
        nodeToLeaf(node.right, new ArrayList<>(path));
        
    }
    public void printPath(List<Integer> path)
    {
        for(int i=0;i<path.size();i++)
        {
            System.out.println(path.get(i));
        }
        System.out.println();
    }
     public static void main(String []args){
         
         TreeNode node= new TreeNode(1);
         node.left= new TreeNode(2);
         node.right= new TreeNode(3);
         node.left.left= new TreeNode(4);
         node.left.right= new TreeNode(5);
         node.right.left= new TreeNode(10);


         HelloWorld h= new HelloWorld();
         h.nodeToLeaf(node,new ArrayList<>());
        

     }
}