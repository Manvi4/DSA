/* Online Java Compiler and Editor */
import java.util.*;

class TreeNode {
    int data;
    TreeNode left, right;

    public TreeNode(int data) {
        this.data = data;
        left = right = null;
    }
}

public class BinaryTreeWidth {

    // Function to print the width of each level
    public static void printWidthAtEachLevel(TreeNode root) {
        if (root == null) {
            return;
        }

        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);

        int level = 0;
        
        while (!queue.isEmpty()) {
            int levelWidth = queue.size(); // Number of nodes at the current level
            System.out.println("Level " + level + " " + levelWidth);
            level++;

            //traverse all nodes at this level and add their children from left to right 
            for (int i = 0; i < levelWidth; i++) {
                TreeNode current = queue.poll();

                if (current.left != null) {
                    queue.add(current.left);
                }
                if (current.right != null) {
                    queue.add(current.right);
                }
            }
        }
    }

    public static void main(String[] args) {
        // Sample Binary Tree
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);
        root.left.left = new TreeNode(4);
        root.left.right = new TreeNode(5);
        root.right.right = new TreeNode(6);

        printWidthAtEachLevel(root);
    }
}
