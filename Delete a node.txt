import java.util.*;

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;

    public TreeNode(int val) {
        this.val = val;
        this.left = null;
        this.right = null;
    }
}

public class HelloWorld {
    
        
    public void deleteNode(TreeNode root,int key)
    {
        if(root==null)
        {
            return null;
        }
        if(key<root.val)
        {
            root.left=deleteNode(root.left,key);
        }
        if(key>root.val)
        {
            root.right=deleteNode(root.right,key);
        }
        else
        {
            //found the key than there will be cases
            //  Node with only one child or no child
            if(root.left==null)
                return root.right;
            
            if(root.right==null)
            
                return root.left;
            
            //node with two children
            int inordervalue= FindMinInRight(root.right);
            // Replace the node's value with the inorder value bcoz now deleting the minimum value so that it has no duplicate
            root.val=inordervalue;
            root.right=deleteNode(root.right, inordervalue);
            
        }
    }
  public TreeNode FindMinInRight(TreeNode root)
  {
      while(root.left!=null)
      {
          root=root.left;
          
      }
      return root;
  }
   
    

    public static void main(String[] args) {
           
         TreeNode node= new TreeNode(14);
         node.left= new TreeNode(11);
         node.right= new TreeNode(17);
         node.left.left= new TreeNode(10);
         node.left.right= new TreeNode(9);
         node.right.left= new TreeNode(16);
         node.right.right= new TreeNode(18);

         HelloWorld h= new HelloWorld();
         h.deleteNode(node, 17);
        
    }
}